@using Turnstile.Core.Constants;
@using Turnstile.Web.Controllers;
@using Turnstile.Web.Extensions;

@{
    ViewData["Title"] = $"Release {Model.UserName}'s seat? | Turnstile";

    var subContext = ViewData.GetSubscriptionContextModel()!;
    var subContextModel = ViewData.GetSubscriptionContextModel()!;
    var urlBackToSubscriptions = Url.RouteUrl(SubscriptionsController.RouteNames.GetSubscriptions);
    var urlBackToSubscription = Url.RouteUrl(SubscriptionsController.RouteNames.GetSubscription,
        new { subscriptionId = subContext.SubscriptionId });
}

@model SeatViewModel

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@urlBackToSubscriptions">Subscriptions</a>
        </li>
        <li class="breadcrumb-item">
            @if (string.IsNullOrEmpty(subContext.SubscriptionName))
            {
                <a href="@urlBackToSubscription">Subscription</a>
            }
            else
            {
                <a href="@urlBackToSubscription">@subContext.SubscriptionName</a>
            }
            @if (subContextModel.IsBeingConfigured || subContextModel.State == SubscriptionStates.Purchased)
            {
                <span title="This subscription is being configured and is temporarily unavailable.">
                    &nbsp;
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
                        <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z" />
                    </svg>
                </span>
            }
            @if (subContextModel.IsFreeTrialSubscription)
            {
                <span>&nbsp;<span class="badge text-bg-success" title="This is a free trial subscription.">Free trial</span></span>
            }
            @if (subContextModel.IsTestSubscription)
            {
                <span>&nbsp;<span class="badge text-bg-info" title="This is a test subscription.">Test</span></span>
            }
        </li>
        <li class="breadcrumb-item active" aria-current="page">
            Release seat
        </li>
    </ol>
</nav>

<h1>Release seat?</h1>

<p class="lead">
    Are you sure you want to release <b>@Model.UserName's</b> seat?
</p>

<form method="post">
    <hidden asp-for="@Model.SeatId" />
    <span>
        <button class="btn btn-danger" type="submit">Release seat</button>
        <a class="btn btn-light" href="@urlBackToSubscription">Cancel</a>
    </span>
</form>